#version 460 core
layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;
layout(rgba32f, binding = 0) uniform image2D screen;

void main() {
    vec4 pixel = vec4(0, 0, 0, 1.0);
    ivec2 pixelCoords = ivec2(gl_GlobalInvocationID.xy);

    ivec2 dims = imageSize(screen);
    float x = -(float(pixelCoords.x * 2 - dims.x) / dims.x); // transforms to (-1.0, 1.0)
    float y = -(float(pixelCoords.y * 2 - dims.y) / dims.y); // transforms to (-1.0, 1.0)

    float fov = 90.0;
    vec3 camOrigin = vec3(0.0, 0.0, -tan(fov / 2.0));
    vec3 rayOrigin = vec3(x, y, 0.0);
    vec3 rayDirection = normalize(rayOrigin - camOrigin);

    vec3 sphereC = vec3(0.0, 0.0, -5.0);
    float sphereRadius = 1.0;

    vec3 oc = rayOrigin - sphereC;
    float b = dot(rayDirection, oc);
    float c = dot(oc, oc) - sphereRadius * sphereRadius;
    float intersectionState = b * b - c;
    vec3 intersection = rayOrigin + rayDirection * (-b + sqrt(b * b - c));
    
    if(intersectionState >= 0.0) {
        pixel = vec4((normalize(intersection - sphereC) + 1.0) / 2.0, 1.0);
    }

    imageStore(screen, pixelCoords, pixel);
}